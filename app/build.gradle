apply plugin: "com.android.application"
apply plugin: 'org.greenrobot.greendao'

import com.android.build.OutputFile

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
    }

//    greendao {
//        schemaVersion 1
//        daoPackage 'com.timediffproject'
//        targetGenDir 'src/main/java/database'
//    }

    defaultConfig {
        applicationId "com.timediffproject"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 15
        versionName "1.5.1"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
        flavorDimensions "versionCode"
    }

    signingConfigs {
        myConfig {
            storeFile file("keystore.jks")
            storePassword "xiaowen520"
            keyAlias "dw"
            keyPassword "xiaowen520"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro"
            signingConfig signingConfigs.myConfig
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro"
            signingConfig signingConfigs.myConfig
        }

    }



    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
    productFlavors {

        debugChannel {}
//        Official {}

//        Store360 {}
//        QQ {}
//        BaiDu {}
//        xiaomi {}
//        huawei {}
//        meizu {}
//        WanDouJia {}


    }


    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(':volley')
    implementation 'com.android.support:appcompat-v7:25.1.0'
    implementation 'com.alibaba:fastjson:1.2.23'
    implementation 'com.android.support:design:25.1.0'

    implementation 'com.github.zcweng:switch-button:0.0.2@aar'

    implementation 'com.umeng.sdk:common:latest.integration'
    implementation 'com.umeng.sdk:analytics:latest.integration'

    implementation 'com.facebook.fresco:fresco:0.12.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'org.greenrobot:eventbus:3.1.1'

    implementation 'org.greenrobot:greendao:3.2.2'

    implementation 'com.aliyun.dpa:oss-android-sdk:2.8.2'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.7'
    implementation 'com.google.code.gson:gson:2.6.2'//Gson 库
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'//导入retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'//转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'//配合Rxjava 使用


    implementation("com.squareup.okhttp3:okhttp:3.12.0")

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}
